<?php
/**
 * Title: Boxes Element
 *
 * Description: Defines custom post type boxes. Defines markup for element "Boxes".
 *
 * Please do not edit this file. This file is part of the Cyber Chimps Framework and all modifications
 * should be made in a child theme.
 *
 * @category Cyber Chimps Framework
 * @package  Framework
 * @since    1.0
 * @author   CyberChimps
 * @license  http://www.opensource.org/licenses/gpl-license.php GPL v3.0 (or later)
 * @link     http://www.cyberchimps.com/
 */

// Don't load directly
if( !defined( 'ABSPATH' ) ) {
	die( '-1' );
}

function cyberchimps_init_boxes_post_type() {

	// Register the custom post type "boxes"
	register_post_type( 'boxes',
	                    array(
		                    'labels'      => array(
			                    'name'               => __( 'Boxes', 'cyberchimps_elements' ),
			                    'singular_name'      => __( 'Boxes', 'cyberchimps_elements' ),
			                    'add_new_item'       => __( 'Add new Box', 'cyberchimps_elements' ),
			                    'edit_item'          => __( 'Edit Box', 'cyberchimps_elements' ),
			                    'new_item'           => __( 'New Box', 'cyberchimps_elements' ),
			                    'view_item'          => __( 'View Box', 'cyberchimps_elements' ),
			                    'search_items'       => __( 'Search Boxes', 'cyberchimps_elements' ),
			                    'not_found'          => __( 'No Boxes found', 'cyberchimps_elements' ),
			                    'not_found_in_trash' => __( 'No Boxes found in trash', 'cyberchimps_elements' )
		                    ),
		                    'public'      => true,
		                    'show_ui'     => true,
		                    'supports'    => array( 'title' ),
		                    'taxonomies'  => array( 'boxes_categories' ),
		                    'has_archive' => false,
		                    'menu_icon'   => get_template_directory_uri() . '/cyberchimps/lib/images/custom-types/boxes.png',
		                    'rewrite'     => false
	                    )
	);

	// Define lebels to be supplied while registering custom category
	$labels = array(
		'name'              => _x( 'Boxes Categories', 'taxonomy general name', 'cyberchimps_elements' ),
		'singular_name'     => _x( 'Boxes Catergory', 'taxonomy singular name', 'cyberchimps_elements' ),
		'search_items'      => __( 'Search Boxes', 'cyberchimps_elements' ),
		'all_items'         => __( 'All Boxes', 'cyberchimps_elements' ),
		'parent_item'       => __( 'Boxes Category', 'cyberchimps_elements' ),
		'parent_item_colon' => __( 'Boxes Category:', 'cyberchimps_elements' ),
		'edit_item'         => __( 'Edit Boxes Category', 'cyberchimps_elements' ),
		'update_item'       => __( 'Update Boxes Category', 'cyberchimps_elements' ),
		'add_new_item'      => __( 'Add New Boxes Category', 'cyberchimps_elements' ),
		'new_item_name'     => __( 'New Boxes Category Name', 'cyberchimps_elements' ),
		'menu_name'         => __( 'Boxes Category', 'cyberchimps_elements' )
	);

	// Register category for "boxes" posts
	register_taxonomy( 'boxes_categories', array( 'boxes' ), array(
		'public'            => true,
		'show_in_nav_menus' => false,
		'hierarchical'      => true,
		'labels'            => $labels,
		'show_ui'           => true
	) );

	/**
	 * Set up Meta Boxes on Box custom post type
	 */

	$box_fields = array( array(
		'type'  => 'single_image',
		'id'    => 'cyberchimps_box_image',
		'class' => '',
		'name'  => __( 'Box Image', 'cyberchimps_elements' )

	),
		array(
			'type'  => 'text',
			'id'    => 'cyberchimps_box_url',
			'class' => '',
			'name'  => __( 'Box URL', 'cyberchimps_elements' )
		),
		array(
			'type'  => 'checkbox',
			'id'    => 'cyberchimps_box_total_link',
			'class' => 'checkbox-toggle',
			'name'  => __( 'Link the whole box', 'cyberchimps_elements' )
		),
		array(
			'type'  => 'editor',
			'id'    => 'cyberchimps_box_text',
			'class' => '',
			'name'  => __( 'Box Text', 'cyberchimps_elements' ),
			'settings' => array( 'media_buttons' => true )
		),

	);
	/*
	 * configure your meta box
	 */
	$box_config = array(
		'id'             => 'boxes', // meta box id, unique per meta box
		'title'          => __( 'Boxes Element', 'cyberchimps_elements' ), // meta box title
		'pages'          => array( 'boxes' ), // post types, accept custom post types as well, default is array('post'); optional
		'context'        => 'normal', // where the meta box appear: normal (default), advanced, side; optional
		'priority'       => 'high', // order of meta box: high (default), low; optional
		'fields'         => $box_fields, // list of meta fields (can be added by field arrays)
		'local_images'   => false, // Use local or hosted images (meta box images for add/remove)
		'use_with_theme' => true //change path if used with theme set to true, false for a plugin or anything else for a custom path(default false).
	);

	/*
	 * Initiate your meta box
	 */
	$box_meta = new Cyberchimps_Meta_Box( $box_config );

	/**
	 * Set up Meta Boxes on Page options
	 */

	// Get custom categories of boxes element
	$boxes_terms = get_terms( 'boxes_categories', 'hide_empty=0' );
	if( !is_wp_error( $boxes_terms ) ) {
		foreach( $boxes_terms as $term ) {
			$boxes_options[$term->slug] = $term->name;
		}
	}
	else {
		$boxes_options = null;
	}

	$page_fields = array( array(
		'type'    => 'select',
		'id'      => 'boxes_category',
		'class'   => '',
		'name'    => __( 'Boxes Category', 'cyberchimps_elements' ),
		'options' => ( isset( $boxes_options ) ) ? $boxes_options : array( 'cc_no_options' => __( 'You need to create a Category', 'cyberchimps_core' ) )
	),
		array(
			'type'    => 'select',
			'id'      => 'boxes_per_row',
			'class'   => '',
			'name'    => __( 'Number of boxes per row', 'cyberchimps_elements' ),
			'options' => array( 2 => '2', 3 => '3', 4 => '4' ),
			'std'     => '3'
		)
	);
	/*
	 * configure your meta box
	 */
	$page_config = array(
		'id'             => 'boxes_options', // meta box id, unique per meta box
		'title'          => __( 'Boxes Options', 'cyberchimps_elements' ), // meta box title
		'pages'          => array( 'page' ), // post types, accept custom post types as well, default is array('post'); optional
		'context'        => 'normal', // where the meta box appear: normal (default), advanced, side; optional
		'priority'       => 'high', // order of meta box: high (default), low; optional
		'fields'         => $page_fields, // list of meta fields (can be added by field arrays)
		'local_images'   => false, // Use local or hosted images (meta box images for add/remove)
		'use_with_theme' => true //change path if used with theme set to true, false for a plugin or anything else for a custom path(default false).
	);

	/*
	 * Initiate your meta box
	 */
	$page_meta = new Cyberchimps_Meta_Box( $page_config );
}

add_action( 'init', 'cyberchimps_init_boxes_post_type' );

add_action( 'boxes', 'cyberchimps_boxes_render_display' );

// Define content for boxes
function cyberchimps_boxes_render_display() {

	// Intialize box counter
	$box_counter    = 1;
	$box_id_counter = 1;

	// Set template directory uri
	$template_directory = get_template_directory_uri();

	// Get options for boxes.
	if( is_page() ) {
		$customcategory = get_post_meta( get_the_ID(), 'boxes_category', true );
		$boxes_per_row  = get_post_meta( get_the_ID(), 'boxes_per_row', true );
	}
	else {
		$customcategory = cyberchimps_get_option( 'boxes_category', '' );
		$boxes_per_row  = cyberchimps_get_option( 'boxes_per_row', '' );
	}

	// Decide span width of boxes according to number of boxes per row.
	if( $boxes_per_row == 2 ) {
		$boxes_span = 'span6';
	}
	else {
		if( $boxes_per_row == 3 ) {
			$boxes_span = 'span4';
		}
	}
	if( $boxes_per_row == 4 ) {
		$boxes_span = 'span3';
	}

	// Custom box query
	$args  = array(
		'numberposts'      => -1,
		'offset'           => 0,
		'boxes_categories' => $customcategory,
		'orderby'          => 'post_date',
		'order'            => 'ASC',
		'post_type'        => 'boxes',
		'post_status'      => 'publish',
		'suppress_filters' => false
	);
	$boxes = get_posts( $args );
	?>
	<div id="boxes_container">
		<div class="boxes row-fluid">
			<?php
			if( $boxes && $customcategory != '' ):
				foreach( $boxes as $box ):

					// Break after desired number of boxes displayed
					if( $box_counter > $boxes_per_row ) {
						echo '</div><div class="boxes row-fluid">';
						$box_counter = 1;
					}

					// Get the image of the box
					$box_image = get_post_meta( $box->ID, 'cyberchimps_box_image', true );

					// Get the URL of the box
					$box_url = get_post_meta( $box->ID, 'cyberchimps_box_url', true );

					// Get the toggle to link the total box.
					$box_total_link = get_post_meta( $box->ID, 'cyberchimps_box_total_link', true );

					// Get the text of the box
					$box_text = get_post_meta( $box->ID, 'cyberchimps_box_text', true );
					?>

					<div id="box<?php echo $box_id_counter ?>" class="box <?php echo $boxes_span; ?>">

						<?php if ($box_url != '' && $box_total_link): ?>
						<a href="<?php echo $box_url; ?>">
							<?php endif; ?>

							<?php if( $box_image != '' ): ?>
								<p class="box-image-container"><img class="box-image" src="<?php echo $box_image; ?>"/></p>
							<?php endif; ?>
							<?php if ($box_url != '' && !$box_total_link): ?>
							<a href="<?php echo $box_url; ?>" class="box-link">
								<?php endif; ?>
								<h2 class="box-widget-title"><?php echo $box->post_title; ?></h2>
								<?php if ($box_url != '' && !$box_total_link): ?>
							</a>
						<?php endif; ?>
							<p><?php echo $box_text; ?></p>

							<?php if ($box_url != '' && $box_total_link): ?>
						</a>
					<?php endif; ?>

					</div><!--end box1-->

					<?php
					$box_counter++;
					$box_id_counter++;
				endforeach;
			else: ?>
				<div class="box span4">
					<a href="http://cyberchimps.com" class="box-link">
						<img class="box-image" src="<?php echo $template_directory; ?><?php echo apply_filters( 'cyberchimps_box1_image', '/elements/lib/images/boxes/slidericon.png' ); ?>"
						     alt="CyberChimps Slider"/>
					</a>

					<h2 class="box-widget-title"><?php printf( __( '%1$s Slider', 'cyberchimps_elements' ), cyberchimps_options_help_header() ); ?></h2>

					<p><?php printf( __( 'The New Touch Friendly %1$s Slider now responds to any mobile touch device.', 'cyberchimps_elements' ), cyberchimps_options_help_header() ); ?></p>
				</div><!--end box1-->

				<div class="box span4">
					<a href="http://cyberchimps.com" class="box-link">
						<img class="box-image" src="<?php echo $template_directory; ?><?php echo apply_filters( 'cyberchimps_box2_image', '/elements/lib/images/boxes/blueprint.png' ); ?>"
						     alt="CyberChimps Blueprint"/>
					</a>

					<h2 class="box-widget-title"><?php _e( 'Responsive Design', 'cyberchimps_elements' ); ?></h2>

					<p><?php printf( __( 'With %1$s and touch friendly responsive design you can now control your website on any device.', 'cyberchimps_elements' ), cyberchimps_options_help_header() ); ?></p>
				</div><!--end box3-->

				<div class="box span4">
					<a href="http://cyberchimps.com" class="box-link">
						<img class="box-image" src="<?php echo $template_directory; ?><?php echo apply_filters( 'cyberchimps_box3_image', '/elements/lib/images/boxes/docs.png' ); ?>"
						     alt="CyberChimps Help"/>
					</a>

					<h2 class="box-widget-title"><?php _e( 'Excellent Support', 'cyberchimps_elements' ); ?></h2>

					<p><?php _e( 'Need help? Read the instructions and please visit our dedicated Pro Support Forum.', 'cyberchimps_elements' ); ?></p>
				</div><!--end box4-->

			<?php    endif;
			?>
		</div>
		<!-- end boxes -->
	</div><!-- end row-fluid -->
<?php
}

?>