<?php
/**
 * Title: Slider Element
 *
 * Description: Slides images from the custom post type slider.
 *
 * Please do not edit this file. This file is part of the Cyber Chimps Framework and all modifications
 * should be made in a child theme.
 *
 * @category Cyber Chimps Framework
 * @package  Framework
 * @since    1.0
 * @author   CyberChimps
 * @license  http://www.opensource.org/licenses/gpl-license.php GPL v3.0 (or later)
 * @link     http://www.cyberchimps.com/
 */

// Don't load directly
if( !defined( 'ABSPATH' ) ) {
	die( '-1' );
}

if( !class_exists( 'CyberChimpsSlider' ) ) {
	class CyberChimpsSlider {

		protected static $instance;
		public $options;

		/* Static Singleton Factory Method */
		public static function instance() {
			if( !isset( self::$instance ) ) {
				$className      = __CLASS__;
				self::$instance = new $className;
			}

			return self::$instance;
		}

		/**
		 * Initializes plugin variables and sets up WordPress hooks/actions.
		 *
		 * @return void
		 */
		protected function __construct() {
			add_action( 'page_slider', array( $this, 'render_display' ) );
			add_action( 'init', array( $this, 'cyberchimps_init_slides_post_type' ) );
			$this->options = get_option( 'cyberchimps_options' );
		}

		function cyberchimps_init_slides_post_type() {
			register_post_type( 'custom_slides',
			                    array(
				                    'labels'      => array(
					                    'name'               => __( 'Slides', 'cyberchimps_elements' ),
					                    'singular_name'      => __( 'Slides', 'cyberchimps_elements' ),
					                    'add_new_item'       => __( 'Add new Slide', 'cyberchimps_elements' ),
					                    'edit_item'          => __( 'Edit Slide', 'cyberchimps_elements' ),
					                    'new_item'           => __( 'New Slide', 'cyberchimps_elements' ),
					                    'view_item'          => __( 'View Slide', 'cyberchimps_elements' ),
					                    'search_items'       => __( 'Search Slides', 'cyberchimps_elements' ),
					                    'not_found'          => __( 'No Slides found', 'cyberchimps_elements' ),
					                    'not_found_in_trash' => __( 'No Slides found in trash', 'cyberchimps_elements' )
				                    ),
				                    'public'      => true,
				                    'show_ui'     => true,
				                    'supports'    => array( 'custom-fields', 'title' ),
				                    'taxonomies'  => array( 'slide_categories' ),
				                    'has_archive' => false,
				                    'menu_icon'   => get_template_directory_uri() . '/cyberchimps/lib/images/custom-types/slider.png',
				                    'rewrite'     => false
			                    )
			);

			$labels = array(
				'name'              => _x( 'Slide Categories', 'taxonomy general name', 'cyberchimps_elements' ),
				'singular_name'     => _x( 'Slide Catergory', 'taxonomy singular name', 'cyberchimps_elements' ),
				'search_items'      => __( 'Search Slides', 'cyberchimps_elements' ),
				'all_items'         => __( 'All Slides', 'cyberchimps_elements' ),
				'parent_item'       => __( 'Slide Category', 'cyberchimps_elements' ),
				'parent_item_colon' => __( 'Slide Category:', 'cyberchimps_elements' ),
				'edit_item'         => __( 'Edit Slide Category', 'cyberchimps_elements' ),
				'update_item'       => __( 'Update Slide Category', 'cyberchimps_elements' ),
				'add_new_item'      => __( 'Add New Slide Category', 'cyberchimps_elements' ),
				'new_item_name'     => __( 'New Slide Category Name', 'cyberchimps_elements' ),
				'menu_name'         => __( 'Slide Category', 'cyberchimps_elements' ),
			);
			register_taxonomy( 'slide_categories', array( 'custom_slides' ), array(
				'public'            => true,
				'show_in_nav_menus' => false,
				'hierarchical'      => true,
				'labels'            => $labels,
				'show_ui'           => true
			) );

			/**
			 * Set up Meta Boxes on Slider custom post type
			 */

			$slider_fields = array( array(
				'type'  => 'single_image',
				'id'    => 'cyberchimps_slider_image',
				'class' => '',
				'name'  => __( 'Slider Image', 'cyberchimps_elements' ),
				'std'   => ''
			),
				array(
					'type'  => 'text',
					'id'    => 'cyberchimps_slider_caption',
					'class' => '',
					'name'  => __( 'Slider Caption', 'cyberchimps_elements' )
				),
				array(
					'type'  => 'text',
					'id'    => 'cyberchimps_slider_url',
					'class' => '',
					'name'  => __( 'Custom Slide Link', 'cyberchimps_elements' )
				),

				array(
					'type'  => 'checkbox',
					'id'    => 'cyberchimps_slider_hidetitle',
					'class' => 'checkbox',
					'name'  => __( 'Title', 'cyberchimps_elements' ),
					'std'   => 1
				),
				array(
					'type'  => 'checkbox',
					'id'    => 'cyberchimps_slider_hidecaption',
					'class' => 'checkbox',
					'name'  => __( 'Caption', 'cyberchimps_elements' ),
					'std'   => 0
				),
				array(
					'type'  => 'reorder',
					'id'    => 'reorder_id',
					'class' => '',
					'name'  => __( 'Reorder', 'cyberchimps_elements' )
				)
			);
			/*
			 * configure your meta box
			 */
			$slider_config = array(
				'id'             => 'slider_options', // meta box id, unique per meta box
				'title'          => __( 'Custom Feature Slides', 'cyberchimps_elements' ), // meta box title
				'pages'          => array( 'custom_slides' ), // post types, accept custom post types as well, default is array('post'); optional
				'context'        => 'normal', // where the meta box appear: normal (default), advanced, side; optional
				'priority'       => 'high', // order of meta box: high (default), low; optional
				'fields'         => $slider_fields, // list of meta fields (can be added by field arrays)
				'local_images'   => false, // Use local or hosted images (meta box images for add/remove)
				'use_with_theme' => true //change path if used with theme set to true, false for a plugin or anything else for a custom path(default false).
			);

			/*
			 * Initiate your meta box
			 */
			$slider_meta = new Cyberchimps_Meta_Box( $slider_config );

			/**
			 * Create Meta boxes on page
			 */

			// get slide categories
			$slide_terms = get_terms( 'slide_categories', 'hide_empty=0' );
			if( !is_wp_error( $slide_terms ) ) {
				foreach( $slide_terms as $term ) {
					$slider_options[$term->slug] = $term->name;
				}
			}
			else {
				$slider_options = null;
			}

			// get cat ids for portfolio
			$cat_terms = get_terms( 'category', 'hide_empty=0' );
			if( !is_wp_error( $cat_terms ) ) {
				$blog_id_options['all'] = "All";
				foreach( $cat_terms as $term ) {
					$blog_id_options[$term->term_id] = $term->name;
				}
				//add in the option for all
			}
			else {
				$blog_id_options = null;
			}

			$page_fields = array(
				array(
					'type'    => 'select',
					'id'      => 'cyberchimps_slider_size',
					'class'   => '',
					'name'    => __( 'Slider Size', 'cyberchimps_elements' ),
					'options' => array( 'full' => __( 'Full', 'cyberchimps_elements' ), 'half' => __( 'Half', 'cyberchimps_elements' ) ),
					'std'     => 'full'
				),
				array(
					'type'    => 'select',
					'id'      => 'cyberchimps_slider_type',
					'class'   => 'select-hide',
					'name'    => __( 'Slider Type', 'cyberchimps_elements' ),
					'options' => array( 'custom_slides' => __( 'Custom', 'cyberchimps_elements' ), 'post' => __( 'Posts', 'cyberchimps_elements' ) )
				),
				array(
					'type'    => 'select',
					'id'      => 'cyberchimps_slider_post_categories',
					'class'   => 'post-select',
					'name'    => __( 'Post Categories', 'cyberchimps_elements' ),
					'options' => ( isset( $blog_id_options ) ) ? $blog_id_options : array( 'cc_no_options' => __( 'You need to create a Category', 'cyberchimps_elements' ) )
				),
				array(
					'type'    => 'select',
					'id'      => 'cyberchimps_slider_custom_categories',
					'class'   => 'custom_slides-select',
					'name'    => __( 'Custom Categories', 'cyberchimps_elements' ),
					'options' => ( isset( $slider_options ) ) ? $slider_options : array( 'cc_no_options' => __( 'You need to create a Category', 'cyberchimps_elements' ) )
				),
				array(
					'type'  => 'text',
					'id'    => 'cyberchimps_number_featured_posts',
					'class' => '',
					'name'  => __( 'Number of Featured Posts', 'cyberchimps_elements' ),
					'std'   => 5
				),
				array(
					'type'  => 'text',
					'id'    => 'cyberchimps_slider_height',
					'class' => '',
					'name'  => __( 'Slider Height', 'cyberchimps_elements' )
				),
				array(
					'type'  => 'text',
					'id'    => 'cyberchimps_slider_speed',
					'class' => '',
					'name'  => __( 'Slider Speed', 'cyberchimps_elements' ),
					'std'   => 3000
				),
				array(
					'type'  => 'checkbox',
					'id'    => 'cyberchimps_slider_arrows',
					'class' => 'checkbox',
					'name'  => __( 'Slider Arrows', 'cyberchimps_elements' ),
					'std'   => 1
				)

			);
			/*
			 * configure your meta box
			 */
			$page_config = array(
				'id'             => 'page_slider_options', // meta box id, unique per meta box
				'title'          => __( 'iFeature Slider Options', 'cyberchimps_elements' ), // meta box title
				'pages'          => array( 'page' ), // post types, accept custom post types as well, default is array('post'); optional
				'context'        => 'normal', // where the meta box appear: normal (default), advanced, side; optional
				'priority'       => 'high', // order of meta box: high (default), low; optional
				'fields'         => $page_fields, // list of meta fields (can be added by field arrays)
				'local_images'   => false, // Use local or hosted images (meta box images for add/remove)
				'use_with_theme' => true //change path if used with theme set to true, false for a plugin or anything else for a custom path(default false).
			);

			/*
			 * Initiate your meta box
			 */
			$page_meta = new Cyberchimps_Meta_Box( $page_config );

		}

		public function render_display() {

			// Set template directory uri
			$template_directory = get_template_directory_uri();

			// set globals
			global $post;

			//set variables if it's a page
			if( is_page() ) {
				$slider_type       = get_post_meta( $post->ID, 'cyberchimps_slider_type', true );
				$post_categories   = get_post_meta( $post->ID, 'cyberchimps_slider_post_categories', true );
				$custom_categories = get_post_meta( $post->ID, 'cyberchimps_slider_custom_categories', true );
				$blog_post_num     = get_post_meta( $post->ID, 'cyberchimps_number_featured_posts', true );
				$slider_height     = get_post_meta( $post->ID, 'cyberchimps_slider_height', true );
				$slider_arrows     = get_post_meta( $post->ID, 'cyberchimps_slider_arrows', true );
				$slider_speed      = get_post_meta( $post->ID, 'cyberchimps_slider_speed', true );
			}
			// set variables if it's blog page
			else {
				$slider_type       = cyberchimps_get_option( 'blog_slider_type', 'custom' );
				$post_categories   = $this->options['blog_slider_post_cats'];
				$custom_categories = ( isset( $this->options['custom_slider_post_cats'] ) ) ? $this->options['custom_slider_post_cats'] : '';
				$blog_post_num     = $this->options['blog_no_featured_posts'];
				$slider_height     = $this->options['slider_height'];
				$slider_arrows     = cyberchimps_get_option( 'slider_arrows', 1 );
				$slider_speed      = cyberchimps_get_option( 'slider_speed', 3000 );
			}
			?>
			<!-- New Slider -->
			<?php
			// If the slider is post based set the variables for the get_posts arguments
			if( $slider_type == 'post' ) {
				$cat           = 'category';
				$cat_type      = ( $post_categories != 'all' ) ? $post_categories : '';
				$blog_post_num = ( $blog_post_num != '' ) ? $blog_post_num : 5;
				$order         = 'DESC';
				$height        = ( $slider_height != '' ) ? 'style="max-height:' . intval( $slider_height ) . 'px!important"' : 'style="max-height:300px"';
			}
			// else if the slider is slider post type based
			else {
				$cat = 'slide_categories';
				//if it's not on a page then set categories
				if( !is_page() ) {
					//make sure categories are set
					if( isset( $this->options['custom_slider_post_cats'] ) && $this->options['custom_slider_post_cats'] ) {
						$cat_obj  = get_term( $custom_categories, 'slide_categories' );
						$cat_type = $cat_obj->slug;
					}
					else {
						$cat_type = '';
					}
				}
				// if it is on a page then set the categories
				else {
					$cat_type = $custom_categories;
				}
				//set more variables for custom slider
				$blog_post_num = 500;
				$order         = 'ASC';
				$height        = ( $slider_height != '' ) ? 'style="max-height:' . intval( $slider_height ) . 'px!important"' : 'style="max-height:300px"';
			}
			// set args for slider
			$args = array(
				'numberposts'      => $blog_post_num,
				'offset'           => 0,
				$cat               => $cat_type,
				'orderby'          => 'post_date',
				'order'            => $order,
				'post_type'        => $slider_type,
				'post_status'      => 'publish',
				'suppress_filters' => false
			);

			//get posts
			$slider = get_posts( $args );

			// set out display
			?>
			<div id="slider" class="carousel slide">

				<!-- Carousel items -->
				<div class="carousel-inner">

					<?php
					if( !empty( $slider ) ):
						//	Setting slide counter
						$slide_counter = 1;

						// Setting the loop to get all slides
						foreach( $slider as $slide ) {

							// Getting ID of the current post
							$post_id = $slide->ID;

							//Getting metabox options for each slides
							$img_src        = get_post_meta( $post_id, 'cyberchimps_slider_image', true );
							$caption        = get_post_meta( $post_id, 'cyberchimps_slider_caption', true );
							$slide_url      = get_post_meta( $post_id, 'cyberchimps_slider_url', true );
							$title_toggle   = get_post_meta( $post_id, 'cyberchimps_slider_hidetitle', true );
							$caption_toggle = get_post_meta( $post_id, 'cyberchimps_slider_hidecaption', true );
							$title          = get_the_title( $post_id );

							// If no URL is supplied then direct to to post page.
							if( $slider_type == 'post' && $slide_url == "" ) {
								$slide_url = get_permalink( $post_id );
							}
							?>
							<!-- Markup for each slides starts -->
							<!-- Adding class="active" for the first slide -->
							<div class="item <?php echo ( $slide_counter == 1 ) ? "active" : ""; ?>">

								<!-- Slide image -->
								<?php if( $slide_url != "" ) { ?>
									<a href="<?php echo esc_url( $slide_url ); ?>">
										<img src="<?php echo $img_src; ?>" <?php echo $height; ?> />
									</a>
								<?php
								}
								else {
									?>
									<img src="<?php echo $img_src; ?>" <?php echo $height; ?> />
								<?php } ?>

								<!-- Display Caption -->
								<?php
								// Display the bar only if atleast any one of title or caption is active and not null
								if( ( $title_toggle == "1" && $title != "" ) || ( $caption_toggle == "1" && $caption != "" ) ) {
									?>
									<div class="carousel-caption">
										<?php
										// If both title and caption are active and not null
										if( ( $title_toggle == "1" && $title != "" ) && ( $caption_toggle == "1" && $caption != "" ) ) {
											?>
											<h4><?php echo $title; ?></h4>
											<p><?php echo $caption; ?></p>
										<?php
										}

										// If only title is active and not null
										elseif( $title_toggle == "1" && $title != "" ) {
											?>
											<h4><?php echo $title; ?></h4>
										<?php
										}

										// If only caption is active and not null
										elseif( $caption_toggle == "1" && $caption != "" ) {
											?>
											<h4><?php echo $caption; ?></h4>
										<?php
										}
										?>
									</div>
								<?php
								} ?>
							</div>
							<!-- Marup for each slides ends -->

							<?php
							$slide_counter++;
						}
					// fallback if no slides are set
					else: ?>
						<div class="item active">
							<!-- Slide image -->
							<a href="http://cyberchimps.com"><img
									src="<?php echo $template_directory; ?><?php echo apply_filters( 'cyberchimps_slide_pro_img1', '/elements/lib/images/slider/slide1.jpg' ); ?>"/></a>

							<!-- Display Caption -->
							<div class="carousel-caption">
								<h4><?php echo apply_filters( 'cyberchimps_slide_pro_caption1', 'CyberChimps' ); ?></h4>
							</div>
						</div>

						<div class="item">
							<!-- Slide image -->
							<a href="http://cyberchimps.com"><img
									src="<?php echo $template_directory; ?><?php echo apply_filters( 'cyberchimps_slide_pro_img2', '/elements/lib/images/slider/slide1.jpg' ); ?>"/></a>

							<!-- Display Caption -->
							<div class="carousel-caption">
								<h4><?php echo apply_filters( 'cyberchimps_slide_pro_caption2', 'CyberChimps' ); ?></h4>
							</div>
						</div>

						<div class="item">
							<!-- Slide image -->
							<a href="http://cyberchimps.com"><img
									src="<?php echo $template_directory; ?><?php echo apply_filters( 'cyberchimps_slide_pro_img3', '/elements/lib/images/slider/slide1.jpg' ); ?>"/></a>

							<!-- Display Caption -->
							<div class="carousel-caption">
								<h4><?php echo apply_filters( 'cyberchimps_slide_pro_caption3', 'CyberChimps' ); ?></h4>
							</div>
						</div>

					<?php endif; ?>

				</div>
				<!-- carousel inner -->

				<!-- Carousel nav -->
				<?php // turn off arrows if set ?>
				<?php if( !empty( $slider_arrows ) ): ?>
					<a class="carousel-control left slider-left" href="#slider" data-slide="prev">&lsaquo;</a>
					<a class="carousel-control right slider-right" href="#slider" data-slide="next">&rsaquo;</a>
				<?php endif; ?>
			</div>
			<!-- /New Slider -->

			<script type="text/javascript">
				jQuery(document).ready(function () {

					// Initialize the carousel and supply the speed
					jQuery('.carousel').carousel({
						interval: <?php echo $slider_speed; ?>
					})
				});
			</script>

		<?php
		}
	}
}
CyberChimpsSlider::instance();